// Generated by delombok at Mon Jun 09 12:47:30 EDT 2025
package studio.magemonkey.fabled.api.event;

import org.bukkit.event.Cancellable;
import org.bukkit.event.HandlerList;
import org.bukkit.event.player.PlayerEvent;
import studio.magemonkey.fabled.api.player.PlayerData;

public class PlayerAttributeChangeEvent extends PlayerEvent implements Cancellable {
    private static final HandlerList handlers = new HandlerList();
    /**
     * Gets the PlayerData associated with the event
     */
    private final PlayerData playerData;
    /**
     * Gets the name of the attribute that was refunded
     */
    private final String attribute;
    /**
     * Gets the amount of change in the attribute. This will be negative
     * if the attribute was refunded and positive if it was upgraded.
     */
    private int change;
    /**
     * {@inheritDoc}
     */
    private boolean cancelled;

    public PlayerAttributeChangeEvent(PlayerData playerData, String attribute, int change) {
        super(playerData.getPlayer());
        this.playerData = playerData;
        this.attribute = attribute;
        this.change = change;
    }

    public static HandlerList getHandlerList() {
        return handlers;
    }

    public HandlerList getHandlers() {
        return handlers;
    }

    /**
     * Gets the PlayerData associated with the event
     *
     * @return PlayerData receiving the refund
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public PlayerData getPlayerData() {
        return this.playerData;
    }

    /**
     * Gets the name of the attribute that was refunded
     *
     * @return name of the refunded attribute
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getAttribute() {
        return this.attribute;
    }

    /**
     * Gets the amount of change in the attribute. This will be negative
     * if the attribute was refunded and positive if it was upgraded.
     *
     * @return amount of change
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getChange() {
        return this.change;
    }

    /**
     * {@inheritDoc}
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean isCancelled() {
        return this.cancelled;
    }

    /**
     * Gets the amount of change in the attribute. This will be negative
     * if the attribute was refunded and positive if it was upgraded.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setChange(final int change) {
        this.change = change;
    }

    /**
     * {@inheritDoc}
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setCancelled(final boolean cancelled) {
        this.cancelled = cancelled;
    }
}
